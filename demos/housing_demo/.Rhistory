source('~/.active-rstudio-document', echo=TRUE)
pools[[1]]
pNames <- c('CIN', 'DUK', 'EES', 'LIND', 'MECS', 'NEPT', 'NYIS')
pNames <- c('CIN', 'DUK', 'EES', 'LIND', 'MECS', 'NEPT', 'NYIS')
for(i in 1:length(pNames)){
assign(pNames[i], pools[[i]])
}
head(pools[[1]])
pools <- pools[-3]
ts <- '140101_0015'
sumAcrossPools <- function(ts){
browser()
index <- which(as.character(pools[[1]]$time) == ts)
txtCmd <- paste('sum(', paste('pools[[', 1:6, ']][index, "EES_TOT_actual"]', collapse = ','), ')', sep = '')
out <- eval(parse(text = txtCmd))
return(out)
}
sumAcrossPools(ts)
ts
index
txtCmd
out
head(EES)
sumAcrossPools <- function(ts){
index <- which(as.character(pools[[1]]$time) == ts)
txtCmd <- paste('sum(', paste('pools[[', 1:6, ']][index, "EES_TOT_actual"]', collapse = ','), ')', sep = '')
out <- eval(parse(text = txtCmd))
return(out)
}
sumAcrossPools(ts)
ts
ts <- '140101_0030'
sumAcrossPools(ts)
ts <- '140101_0100'
sumAcrossPools(ts)
timeStamps <- as.character(EES$time)
sumByPools <- sapply(timeStamps, sumAcrossPools)
sumByPools
head(sumByPools)
head(EES$EES_TOT_actual)
plot(EES$EES_TOT_actual[1:1000], sumByPools[1:1000])
plot(EES$EES_TOT_actual[1:5000], sumByPools[1:5000])
plot(EES$EES_TOT_actual[1:10000], sumByPools[1:10000])
plot(EES$EES_TOT_actual[1:20000], sumByPools[1:20000])
plot(EES$EES_TOT_actual[1:20000], EES$EES_TOT_15m[1:20000])
plot(EES$EES_TOT_actual[1:10000], EES$EES_TOT_15m[1:10000])
plot(EES$EES_TOT_actual[1:10000], EES$EES_TOT_60m[1:10000])
sum(abs(EES$EES_TOT_actual[1:10000] - sumByPools[1:1e04]))
sum(abs(EES$EES_TOT_actual[1:10000] - EES$EES_TOT_60m[1:1e04]))
sum(abs(EES$EES_TOT_actual[1:10000] - EES$EES_TOT_120m[1:1e04]))
sum(abs(EES$EES_TOT_actual[1:10000] - EES$EES_TOT_180m[1:1e04]))
sum(abs(EES$EES_TOT_actual[1:10000] - EES$EES_TOT_150m[1:1e04]))
sum(abs(EES$EES_TOT_actual[1:10000] - EES$EES_TOT_135m[1:1e04]))
sum(abs(EES$EES_TOT_actual[1:10000] - EES$EES_TOT_15m[1:1e04]))
sum(abs(EES$EES_TOT_actual[1:100] - EES$EES_TOT_15m[1:100]))
sum(abs(EES$EES_TOT_actual[1:100] - sumByPools[1:100]))
sum(abs(EES$EES_TOT_actual[1:100] - EES$EES_TOT_30m[1:100]))
sum(abs(EES$EES_TOT_actual[1:100] - EES$EES_TOT_60m[1:100]))
sum(abs(EES$EES_TOT_actual[1:100] - EES$EES_TOT_45m[1:100]))
data <- EES$EES_TOT_actual[1:200]
data
predictor <- sumByPools[1:200]
predictor
test <- lm(data ~ predictor)
test
test <- lm(data[1:100] ~ predictor[1:100])
predict(test, predictor[101:110])
test
?predict
predict(test, predictor[101:200])
predict(test, as.matrix(predictor[101:200]))
predict(test, as.data.frame(predictor[101:200]))
myVals <- predict(test, as.data.frame(predictor[101:200]))
sum(abs(test[101:200] - myVals))
sum(abs(test[101:200] - unlist(myVals)))
class(test)
sum(abs(data[101:200] - unlist(myVals)))
sum(abs(data[101:200] - EES$EES_TOT_15m[101:200]))
sum(abs(data[101:200] - EES$EES_TOT_45m[101:200]))
sum(abs(data[101:200] - EES$EES_TOT_60m[101:200]))
test <- lm(data[1:10] ~ predictor[1:10])
predict(test, predictor[11:20])
predict(test, as.data.frame(predictor[11:20]))
data[11:20]
predictors
predictor <- as.matrix(sumByPools[1:200], EES$EES_TOT_15m[1:200])
predictor
predictor <- cbind(sumByPools[1:200], EES$EES_TOT_15m[1:200])
predictor
test <- lm(data[1:50] ~ predictor[1:50,])
predict(test, predictor[51:60,])
predict(test, as.data.frame(predictor[51:60,]))
predict(test, as.data.frame(predictor[51:100,]))
predict(test, as.data.frame(predictor[51:100,]))
myVals <- predict(test, as.data.frame(predictor[51:100,]))
data[51:100]
sum(abs(data[51:100] - myVals))
plot(EES$EES_TOT_actual ~ sumByPools, pch = '.')
plot(EES$EES_TOT_actual ~ EES$EES_TOT_120m, pch = '.')
plot(EES$EES_TOT_actual ~ sumByPools, pch = '.')
plot(EES$EES_TOT_actual ~ NYIS$EES_TOT_actual, pch = '.')
?loess
meh <- loess(EES$EES_TOT_actual ~ NYIS$EES_TOT_actual)
meh
plot(meh)
?lowess
lowess(x = EES$EES_TOT_actual, y = NYIS$EES_TOT_actual)
plot(lowess(x = EES$EES_TOT_actual, y = NYIS$EES_TOT_actual))
plot(EES$EES_TOT_actual ~ NYIS$EES_TOT_actual)
plot(EES$EES_TOT_actual ~ NYIS$EES_TOT_actual, pch = '.')
lines(lowess(x = EES$EES_TOT_actual, y = NYIS$EES_TOT_actual), col = 'red')
plot(CIN$EES_TOT_actual ~ NYIS$EES_TOT_actual, pch = '.')
plot(DUK$EES_TOT_actual ~ NYIS$EES_TOT_actual, pch = '.')
plot(DUK$EES_TOT_actual[1:5000] ~ NYIS$EES_TOT_actual[1:5000], pch = '.')
plot(DUK$EES_TOT_actual ~ NYIS$EES_TOT_actual, pch = '.')
plot(LIND$EES_TOT_actual ~ NYIS$EES_TOT_actual, pch = '.')
plot(NYIS$EES_TOT_actual ~ LIND$EES_TOT_actual, pch = '.')
plot(NEPT$EES_TOT_actual ~ LIND$EES_TOT_actual, pch = '.')
head(EES)
EES$sumPools <- sumByPools
head(EES)
?write.delim
?write.table
write.table(EES, file = 'C:/Users/venz586/Desktop/newEES.NET.m15.spl.sch', quote = F, sep = '',
row.names = F, col.names = F)
write.table(EES, file = 'C:/Users/venz586/Desktop/newEES.NET.m15.spl.sch', quote = F, sep = ' ',
row.names = F, col.names = F)
source('C:/Users/venz586/Desktop/compare.R', echo=TRUE)
fp <- 'C:/Users/venz586/Desktop/PJM_noPCR/Dat/NYIS/'
compare(fp)
fp <- 'C:/Users/venz586/Desktop/PJM_noSchedule/Dat/NYIS/'
compare(fp)
fp <- 'C:/Users/venz586/Desktop/PJM_noSchedule/Dat/LIND/'
compare(fp)
fp <- 'C:/Users/venz586/Desktop/PJM_noPCR/Dat/LIND/'
compare(fp)
fp <- 'C:/Users/venz586/Desktop/PJM_noPCR/Dat/NEPT/'
compare(fp)
compare(fp, rmz = F)
fp <- 'C:/Users/venz586/Desktop/PJM_noSchedule/Dat/NEPT/'
compare(fp, rmz = F)
compare(fp)
fp <- 'C:/Users/venz586/Desktop/PJM_noPCR/Dat/EES/'
compare(fp)
source('C:/Users/venz586/Desktop/playWithEES.R', echo=TRUE)
head(CIN)
plot(CIN$EES_TOT_actual ~ CIN$EES_TOT_15m)
plot(CIN$EES_TOT_actual ~ CIN$EES_TOT_15m, pch = '.')
points(CIN$EES_TOT_actual[1:5000] ~ CIN$EES_TOT_15m[1:5000], pch = '.', col = 'red')
cin15m <- CIN$EES_TOT_actual - CIN$EES_TOT_15m
cin15m <- cin15m[cin15m != 0]
head(cin15m)
cin15m <- CIN$EES_TOT_actual - CIN$EES_TOT_15m
cin15m <- data.frame('time' = CIN$time, 'diff' = cin15m)
head(cin15m)
cin15m <- cin15m[cin15m$diff != 0,]
head(cin15m)
head(CIN)
cin15m <- CIN$EES_TOT_actual[2:nrow(CIN)] - CIN$EES_TOT_15m[1:(nrow(CIN)-1)]
cin15m <- data.frame('time' = CIN$time, 'diff' = cin15m)
cin15m <- cin15m[cin15m$diff != 0,]
cin15m <- data.frame('time' = CIN$time[2:nrow(CIN)], 'diff' = cin15m)
cin15m <- cin15m[cin15m$diff != 0,]
cin15m
plot(CIN$EES_TOT_actual[2:nrow(CIN)] ~ CIN$EES_TOT_15m[1:(nrow(CIN)-1)], pch = '.')
plot(CIN$EES_TOT_actual[3:nrow(CIN)] ~ CIN$EES_TOT_15m[1:(nrow(CIN)-2)], pch = '.')
plot(CIN$EES_TOT_actual[3:nrow(CIN)] ~ CIN$EES_TOT_30m[1:(nrow(CIN)-2)], pch = '.')
cin30m <- CIN$EES_TOT_actual[3:nrow(CIN)] - CIN$EES_TOT_15m[1:(nrow(CIN)-2)]
cin30m <- data.frame('time' = CIN$time[3:nrow(CIN)], 'diff' = cin30m)
cin30m <- cin30m[cin30m$diff != 0,]
head(cin30m)
summary(cin30m$diff)
head(cin30m, 20)
cin30m$diff <- abs(cin30m$diff)
summary(cin30m$diff)
head(cin30m, 10)
tail(cin30m)
head(CIN)
forKicks <- sqrt(CIN$EES_TOT_15m * CIN$EES_TOT_30m)
forKicks
head(forKicks)
head(CIN)
sqrt(-200*137)
(-200*137)^(1/3)
head(forKicks, 20)
head(CIN, 10)
head(CIN, 15)
head(cin30m)
head(cin30m, 15)
head(CIN)
head(CIN, 10)
head(cin30m)
cin30m <- CIN$EES_TOT_actual[3:nrow(CIN)] - CIN$EES_TOT_15m[1:(nrow(CIN)-2)]
head(cin30m)
CIN[5,]
head(CIN)
acts <- CIN$EES_TOT_actual[3:nrow(CIN)]
preds <- CIN$EES_TOT_15m[1:(nrow(CIN)-2)]
head(acts)
cin30m <- CIN$EES_TOT_actual[3:nrow(CIN)] - CIN$EES_TOT_30m[1:(nrow(CIN)-2)]
head(cin30m)
cin30m <- data.frame('time' = CIN$time[3:nrow(CIN)], 'diff' = cin30m)
cin30m <- cin30m[cin30m$diff != 0,]
head(cin30m)
cin30m$diff <- abs(cin30m$diff)
head(cin30m)
summary(cin30m$diff)
cin45m <- CIN$EES_TOT_actual[4:nrow(CIN)] - CIN$EES_TOT_45m[1:(nrow(CIN)-3)]
cin45m <- data.frame('time' = CIN$time[4:nrow(CIN)], 'diff' = cin45m)
cin45m <- cin45m[cin45m$diff != 0,]
head(cin45m)
source('C:/Users/venz586/Desktop/compare.R', echo=TRUE)
fp <- 'C:/Users/venz586/Desktop/PJM_noPCR/Dat/NYIS/'
compare(fp)
fp <- 'C:/Users/venz586/Desktop/PJM_noPCR/Dat/LIND/'
compare(fp)
fp <- 'C:/Users/venz586/Desktop/PJM_noSchedule/Dat/NYIS/'
compare(fp)
fp <- 'C:/Users/venz586/Desktop/PJM_noSchedule/Dat/LIND/'
compare(fp, rmz=F)
compare(fp)
fp <- 'C:/Users/venz586/Desktop/PJM_noSchedule/Dat/NEPT/'
compare(fp)
compare(fp, rmz = F)
fp <- 'C:/Users/venz586/Desktop/PJM_noPCR/Dat/NEPT/'
compare(fp, rmz = F)
compare(fp)
source('C:/Users/venz586/Desktop/bigTimeVec.R', echo=TRUE)
source('C:/Users/venz586/Desktop/PJM_experimental_EES/timeVector.R', echo=TRUE)
source('C:/Users/venz586/Desktop/bigTimeVec.R', echo=TRUE)
source('C:/Users/venz586/Desktop/PJM_experimental_EES/timeVector.R', echo=TRUE)
source('C:/Users/venz586/Desktop/bigTimeVec.R', echo=TRUE)
source('C:/Users/venz586/Desktop/bigTimeVec.R', echo=TRUE)
timeVector(st, et, months)
source('C:/Users/venz586/Desktop/PJM_experimental_EES/timeVector.R', echo=TRUE)
timeVector(st, et, months)
months <- c('Jan')
st <- c('15_01_01_00_00')
et <- c('1501312345')
times <- lapply(1:length(months), function(i) timeVector(st[i], et[i], months[i]))
times <- unlist(times)
save(times, file = 'C:/Users/venz586/Desktop/timeVector.RData')
source('C:/Users/venz586/Desktop/playWithEES.R', echo=TRUE)
require(randomForest)
require(lars)
require(e1071)
?svm
EES$sumPools <- sumByPools
head(EES)
trainWindow <- 100
trainWindow <- 1:100
svm.fit <- svm(x = EES[trainWindow, 3:ncol(EES)], y = EES[trainWindow, 'EES_TOT_actual'])
svm.fit
svm.predict <- predict(svm.fit, EES[101:110, 3:ncol(EES)])
svm.predict
EES[101,]
EES$EES_TOT_actual[101:110]
EES$EES_TOT_actual[102:111]
svm.predict
EES$EES_TOT_actual[102:111]
trainWindow <- 1:200
svm.fit <- svm(x = EES[trainWindow, 3:ncol(EES)], y = EES[trainWindow, 'EES_TOT_actual'])
svm.predict <- predict(svm.fit, EES[201:210, 3:ncol(EES)])
svm.predict
EES[201:210,]
svmEES <- read.delim('C:/Users/venz586/Desktop/PJM_noPCR/Dat/EES/svm.m15.spl.for', header = F, sep = '')
head(svmEES)
svm.fit <- svm(x = EES[trainWindow, 3:ncol(EES)], y = EES[trainWindow, 'EES_TOT_actual'], kernel = 'linear')
svm.predict <- predict(svm.fit, EES[201:210, 3:ncol(EES)])
svm.fit
svm.predict
EES$EES_TOT_actual[201:210]
require(nnet)
?nnet
nnet.fit <- nnet(x = EES[trainWindow, 3:ncol(EES)], y = EES[trainWindow, 'EES_TOT_actual'], size = 5, linout = T)
nnet.fit <- nnet(x = EES[trainWindow, 3:ncol(EES)], y = EES[trainWindow, 'EES_TOT_actual'], size = 10, linout = T)
nnet.fit <- nnet(x = EES[trainWindow, 3:ncol(EES)], y = EES[trainWindow, 'EES_TOT_actual'], size = 20, linout = T)
nnet.fit <- nnet(x = EES[trainWindow, 3:ncol(EES)], y = EES[trainWindow, 'EES_TOT_actual'], size = 15, linout = T)
nnet.predict <- predict(nnet.fit, EES[201:210, 3:ncol(EES)])
nnet.predict
EES[201:210, 'EES_TOT_actual']
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
rm(svmEES)
rm(nnet.predict)
Y <- EES$EES_TOT_actual[trainWindow]
X <- EES[trainWindow, 3:ncol(EES)]
newX <- EES[201:210, 3:ncol(EES)]
csPredict.nnet(Y,X,newX)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
csPredict.nnet(Y,X,newX)
head(trainMat)
scaledNewX
scaledNewX <- t(scaledNewX)
head(trainMat)
scaledNewX
out
Ysd
nnet.prediction
nnet.fit
scaledNewX
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
csPredict.nnet(Y,X,newX)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
csPredict.nnet(Y,X,newX)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
csPredict.nnet(Y,X,newX)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
csPredict.nnet(Y,X,newX)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
csPredict.nnet(Y,X,newX)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
csPredict.nnet(Y,X,newX)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
csPredict.nnet(Y,X,newX)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_nnet.R', echo=TRUE)
csPredict.nnet(Y,X,newX)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_svm.R', echo=TRUE)
csPredict.svm(Y,X,newX)
modelCfg <- list(trainPars = NULL)
csPredict.svm(Y,X,newX,modelCfg)
EES$EES_TOT_actual[201:210]
Y
X
head(X)
modelCfg <- list(kernel = 'linear')
csPredict.svm(Y,X,newX,modelCfg)
Y <- EES$EES_TOT_actual[1:20, 'EES_TOT_actual']
Y <- EES$EES_TOT_actual[1:20]
X <- EES[1:20, 3:ncol(EES)]
newX <- EES[21:25, 3:ncol(EES)]
csPredict.svm(Y,X,newX)
csPredict.svm(Y,X,newX,modelCfg)
EES$EES_TOT_actual[21:25]
X <- EES[1:20, c('EES_TOT_15m', 'EES_TOT_30m', 'EES_TOT_45m', 'EES_TOT_60m', 'EES_TOT_75m', 'sumPools')]
X
newX <- EES[21:25, c('EES_TOT_15m', 'EES_TOT_30m', 'EES_TOT_45m', 'EES_TOT_60m', 'EES_TOT_75m', 'sumPools')]
csPredict.svm(Y,X,newX,modelCfg)
EES$EES_TOT_actual[21:25]
modelCfg = list(trainPars=NULL)
csPredict.svm(Y,X,newX,modelCfg)
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_svm.R', echo=TRUE)
csPredict.svm(Y,X,newX,modelCfg)
fit
fit2 <- svm(x = X, y = Y, kernel = 'linear')
newX <- newX[,goodCols]
out <- predict(fit, newX)
out
o2 <- predict(fit2, newX)
o2
EES$EES_TOT_actual[21:25]
EES[21,]
?svm
?tune.svm
X
tune.svm(x = X, y = Y)
best.svm(x = X)
best.svm(x = X, y = Y)
meh <- best.svm(x = X, y = Y)
predict(meh, newX)
meh <- best.svm(x = X, y = Y, kernel = 'linear')
predict(meh, newX)
trueY <- EES$EES_TOT_actual[500:515]
trueY
length(trueY)
y25 <- EES$EES_TOT_actual[(499-25):499]
y25 <- EES$EES_TOT_actual[(499-24):499]
x25 <- EES[(499-24):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
csPredict.svm(y25, x25, newX)
csPredict.svm(y25, x25, newX, modelCfg = list(kernel = 'linear'))
out
trueY
fit
source('C:/Users/venz586/Desktop/PJM_2015/Src/BMA/package/R/methods_svm.R', echo=TRUE)
csPredict.svm(y25, x25, newX, modelCfg = list(kernel = 'linear'))
trueY
yTest <- EES$EES_TOT_actual[(499-49):499]
xTest <- EES[(499-49):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
csPredict.svm(yTest, xTest, newX, NULL)
trueY
yTest <- EES$EES_TOT_actual[(499-49):499]
xTest <- EES[(499-49):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- sum(abs(trueY - prediction))
print(error)
yTest <- EES$EES_TOT_actual[(499-74):499]
xTest <- EES[(499-74):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- sum(abs(trueY - prediction))
print(error)
yTest <- EES$EES_TOT_actual[(499-99):499]
xTest <- EES[(499-99):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- sum(abs(trueY - prediction))
print(error)
errVals <- sapply(trainWin, function(w){
yTest <- EES$EES_TOT_actual[(499-w):499]
xTest <- EES[(499-w):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- sum(abs(trueY - prediction))
print(error)
})
trainWin <- c(25-1, 50-1, 75-1, 100-1, 125-1, 150-1, 175-1, 200-1)
errVals <- sapply(trainWin, function(w){
yTest <- EES$EES_TOT_actual[(499-w):499]
xTest <- EES[(499-w):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- sum(abs(trueY - prediction))
print(error)
})
trainWin <- c(25-1, 50-1, 75-1, 100-1, 125-1, 150-1, 175-1, 200-1, 225-1, 250-1, 275-1, 300-1)
errVals <- sapply(trainWin, function(w){
yTest <- EES$EES_TOT_actual[(499-w):499]
xTest <- EES[(499-w):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- sum(abs(trueY - prediction))
print(error)
})
trainWin <- c(25-1, 50-1, 75-1, 100-1, 125-1, 150-1, 175-1, 200-1, 225-1, 250-1, 275-1, 300-1)
errVals <- sapply(trainWin, function(w){
yTest <- EES$EES_TOT_actual[(499-w):499]
xTest <- EES[(499-w):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- mean((trueY - prediction)^2)
print(error)
})
trainWin <- c(25-1, 50-1, 75-1, 100-1, 125-1, 150-1, 175-1, 200-1, 225-1, 250-1, 275-1, 300-1, 325-1, 350-1, 375-1,400-1)
errVals <- sapply(trainWin, function(w){
yTest <- EES$EES_TOT_actual[(499-w):499]
xTest <- EES[(499-w):499, 3:ncol(EES)]
newX <- EES[500:515, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- mean((trueY - prediction)^2)
print(error)
})
trueY <- EES$EES_TOT_actual[1000:1015]
trainWin <- c(25-1, 50-1, 75-1, 100-1, 125-1, 150-1, 175-1, 200-1, 225-1, 250-1, 275-1, 300-1, 325-1, 350-1, 375-1,400-1)
trueY <- EES$EES_TOT_actual[1000:1015]
trainWin <- c(25-1, 50-1, 75-1, 100-1, 125-1, 150-1, 175-1, 200-1, 225-1, 250-1, 275-1, 300-1, 325-1, 350-1, 375-1,400-1)
errVals <- sapply(trainWin, function(w){
yTest <- EES$EES_TOT_actual[(999-w):999]
xTest <- EES[(999-w):999, 3:ncol(EES)]
newX <- EES[1000:1015, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- mean((trueY - prediction)^2)
print(error)
})
trueY <- EES$EES_TOT_actual[1100:1115]
trainWin <- c(25-1, 50-1, 75-1, 100-1, 125-1, 150-1, 175-1, 200-1, 225-1, 250-1, 275-1, 300-1, 325-1, 350-1, 375-1,400-1)
errVals <- sapply(trainWin, function(w){
yTest <- EES$EES_TOT_actual[(1099-w):1099]
xTest <- EES[(1099-w):1099, 3:ncol(EES)]
newX <- EES[1100:1115, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- mean((trueY - prediction)^2)
print(error)
})
plot(errVals)
EES$sumPools <- NULL
errVals
eVals <- errVals
trueY <- EES$EES_TOT_actual[1100:1115]
trainWin <- c(25-1, 50-1, 75-1, 100-1, 125-1, 150-1, 175-1, 200-1, 225-1, 250-1, 275-1, 300-1, 325-1, 350-1, 375-1,400-1)
errVals <- sapply(trainWin, function(w){
yTest <- EES$EES_TOT_actual[(1099-w):1099]
xTest <- EES[(1099-w):1099, 3:ncol(EES)]
newX <- EES[1100:1115, 3:ncol(EES)]
prediction <- csPredict.svm(yTest, xTest, newX, NULL)
error <- mean((trueY - prediction)^2)
print(error)
})
plot(eVals)
points(errVals, col = 'red')
load("C:/Users/venz586/Desktop/PJM_2015/BMA/data/pred/pool_CIN__opt_train_60min.Rdata")
tail(dat, 10
)
minVec <- as.character(seq(15,240,by=15))
minVec
tail(dat, 1)
seq(0.25,4,by=0.25)
seq(0.25,4,by=0.25)*4
?file.path
rm(list = ls())
?system
maxIndex <- max(nrow(epMeta), length(mtrHashes))
importFiles <- filenames[grep(inputParamString,filenames)]
?read.csv
library(datadr)
library(trelliscope)
library(housingData)
data(housingData)
devtools::install_github('hafen/housingData')
library(datadr)
library(trelliscope)
library(housingData)
hdDir <- 'C:/Users/venz586/Documents/docs-csp2015/demos/housing_demo/'
setwd(hdDir)
vdbConn("vdb_housing", autoYes = TRUE)
myport <- 8100 # use this when running locally on your own computer
view(port = myport)
view(port = myport)
view(port = myport)
?drQuantile
?getSplitVars
